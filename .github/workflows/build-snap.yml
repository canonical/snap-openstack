name: Build Snap

on:
  workflow_call:
    outputs:
      snap:
        description: "Filename of the built snap artifact"
        value: local-${{ jobs.build.outputs.snap }}

jobs:
  build:
    name: Build snap
    runs-on: ubuntu-latest
    outputs:
      snap: ${{ steps.snapcraft.outputs.snap }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Build snap locally
        uses: snapcore/action-build@v1
        id: snapcraft

      - name: Upload locally built snap artifact
        uses: actions/upload-artifact@v3
        with:
          name: local-${{ steps.snapcraft.outputs.snap }}
          path: ${{ steps.snapcraft.outputs.snap }}

  functional-test:
    needs: build
    name: Functional test
    runs-on: [self-hosted, xlarge]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Download snap artifact
        id: download
        uses: actions/download-artifact@v3
        with:
          name: local-${{ needs.build.outputs.snap }}
      - name: test
        run: |
          export COLUMNS=256
          sudo sysctl -w net.ipv6.conf.all.disable_ipv6=1
          sudo snap install  ${{ needs.build.outputs.snap }} --dangerous
          openstack.sunbeam prepare-node-script | bash -x
          sudo snap connect openstack:juju-bin juju:juju-bin
          sudo snap connect openstack:dot-local-share-juju
          sudo snap connect openstack:dot-config-openstack
          sg snap_daemon "openstack.sunbeam -v cluster bootstrap --accept-defaults"
          sg snap_daemon "openstack.sunbeam enable orchestration"
          sg snap_daemon "openstack.sunbeam cluster list"
          sg snap_daemon "openstack.sunbeam enable loadbalancer"
          sg snap_daemon "openstack.sunbeam -v configure -a"
          sg snap_daemon "openstack.sunbeam -v launch"
      - name: Collect juju status
        if: always()
        run: |
          juju status
          juju status -m openstack
          juju debug-log -m openstack --replay
